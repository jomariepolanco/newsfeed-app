[{"/Users/joeyp/Development/code/newsfeed-app/client/src/index.tsx":"1","/Users/joeyp/Development/code/newsfeed-app/client/src/App.tsx":"2","/Users/joeyp/Development/code/newsfeed-app/client/src/containers/NewsContainer.tsx":"3","/Users/joeyp/Development/code/newsfeed-app/client/src/containers/NotesContainer.tsx":"4","/Users/joeyp/Development/code/newsfeed-app/client/src/components/NewsCard.tsx":"5","/Users/joeyp/Development/code/newsfeed-app/client/src/components/NoteCard.tsx":"6","/Users/joeyp/Development/code/newsfeed-app/client/src/components/Navbar.tsx":"7","/Users/joeyp/Development/code/newsfeed-app/client/src/components/CheckBoxes.tsx":"8","/Users/joeyp/Development/code/newsfeed-app/client/src/containers/SearchForm.tsx":"9","/Users/joeyp/Development/code/newsfeed-app/client/src/components/CreateNoteForm.tsx":"10","/Users/joeyp/Development/code/newsfeed-app/client/src/components/FormInput.tsx":"11"},{"size":249,"mtime":1610412631429,"results":"12","hashOfConfig":"13"},{"size":1599,"mtime":1610478269167,"results":"14","hashOfConfig":"13"},{"size":1144,"mtime":1610477341172,"results":"15","hashOfConfig":"13"},{"size":771,"mtime":1610471836057,"results":"16","hashOfConfig":"13"},{"size":1050,"mtime":1610469053900,"results":"17","hashOfConfig":"13"},{"size":502,"mtime":1610471836057,"results":"18","hashOfConfig":"13"},{"size":982,"mtime":1610417774291,"results":"19","hashOfConfig":"13"},{"size":472,"mtime":1610477996462,"results":"20","hashOfConfig":"13"},{"size":1383,"mtime":1610478112059,"results":"21","hashOfConfig":"13"},{"size":2099,"mtime":1610469053899,"results":"22","hashOfConfig":"13"},{"size":663,"mtime":1610469053900,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"f863mb",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/joeyp/Development/code/newsfeed-app/client/src/index.tsx",[],["52","53"],"/Users/joeyp/Development/code/newsfeed-app/client/src/App.tsx",[],"/Users/joeyp/Development/code/newsfeed-app/client/src/containers/NewsContainer.tsx",["54"],"import { createStyles, GridList, GridListTile, makeStyles, Theme } from '@material-ui/core';\nimport React, { useEffect } from 'react'\nimport NewsCard from '../components/NewsCard'\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper\n    },\n    gridList: {\n        width: 1000,\n        height: 450\n    },\n})\n)\ninterface Props {\n    news: any;\n}\n\nconst NewsContainer: React.FC<Props> = ({news}) => {\n\n\n    const renderNewsCards = () => {\n        return [...news].map((article, idx) => {\n            return(\n                <GridListTile key={idx}>\n                    <NewsCard key={idx} news={article}/>\n                </GridListTile>\n            )\n        })\n    }\n\n    const classes = useStyles()\n\n    return (\n        <div className={classes.root}>\n            <GridList cellHeight={200} spacing={1} className={classes.gridList}>\n                {renderNewsCards()}\n\n            </GridList>\n        </div>\n    )\n}\n\nexport default NewsContainer;","/Users/joeyp/Development/code/newsfeed-app/client/src/containers/NotesContainer.tsx",["55"],"import { Button, Grid } from '@material-ui/core';\nimport React, {useEffect, useState} from 'react'\nimport CreateNoteForm from '../components/CreateNoteForm';\nimport NoteCard from '../components/NoteCard'\n\nexport default function NotesContainer() {\n    const [notes, setNotes] = useState([]);\n\n    const getNotes = () => {\n      fetch('/api/notes')\n        .then((result) => result.json())\n        .then((res) => setNotes(res));\n    };\n\n    useEffect(() => {\n        getNotes()\n    }, [])\n\n    const renderNoteCards = () => {\n        return [...notes].map(note => <Grid item xs={4} spacing={2}><NoteCard note={note} /></Grid>)\n    }\n  \n    console.log(notes)\n    return (\n        <div>\n            {renderNoteCards()}\n            <CreateNoteForm />\n        </div>\n    )\n}\n","/Users/joeyp/Development/code/newsfeed-app/client/src/components/NewsCard.tsx",["56","57"],"import { createStyles, GridListTileBar, IconButton, makeStyles } from '@material-ui/core'\nimport StarBorderIcon from '@material-ui/icons/StarBorder'\nimport React from 'react'\n\nconst useStyles = makeStyles(() => createStyles({\n    titleBar: {\n        background: 'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%,' + 'rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%'\n    },\n    icon: {\n        color: 'white',\n    }\n    })\n)\n\ninterface Props {\n    news: any;\n}\n\nconst NewsCard: React.FC<Props> = ({news}) => {\n\n    const toggleModal = () => {\n        console.log('toggle')\n    }\n\n    const classes = useStyles()\n    return (\n        <div>\n            <a href={news.url} target=\"_onblank\">\n                <img src={news.urlToImage} alt={news.title} />\n            </a> \n                <GridListTileBar title={news.title} titlePosition=\"top\" actionIcon={<IconButton aria-label={`start ${news.title}`} className={classes.icon}><StarBorderIcon/></IconButton>} actionPosition=\"left\" className={classes.titleBar} />\n\n        </div>\n    )\n}\n\nexport default NewsCard;\n","/Users/joeyp/Development/code/newsfeed-app/client/src/components/NoteCard.tsx",["58"],"import { Paper } from '@material-ui/core';\nimport { Note } from '@material-ui/icons';\nimport React from 'react'\n\n\ninterface Props {\n    note: {id: number, articleTitle: string, text: string, user: {id: number, name: string}};\n}\n\nconst NoteCard: React.FC<Props> = ({note}) => {\n    return (\n        <Paper elevation={3} variant=\"outlined\">\n            <h3>{note.articleTitle}</h3>\n            <p>{note.text}</p>\n            <h5>- {note.user.name}</h5>\n        </Paper>\n    )\n}\n\nexport default NoteCard;\n","/Users/joeyp/Development/code/newsfeed-app/client/src/components/Navbar.tsx",[],"/Users/joeyp/Development/code/newsfeed-app/client/src/components/CheckBoxes.tsx",["59","60"],"/Users/joeyp/Development/code/newsfeed-app/client/src/containers/SearchForm.tsx",[],"/Users/joeyp/Development/code/newsfeed-app/client/src/components/CreateNoteForm.tsx",["61","62","63","64","65"],"import { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControlLabel, makeStyles, TextField, Typography } from '@material-ui/core';\nimport { Label } from '@material-ui/icons';\nimport React, {ChangeEvent, useState} from 'react'\nimport FormInput from './FormInput';\n\nconst CreateNoteForm = () => {\n\n    const [open, setOpen] = useState(false)\n    const [text, setText] = useState('')\n    const [articleTitle, setArticleTitle] = useState('')\n\n    const changeHandler = (value: string, name: string) => {\n        if (name === \"text\") setText(value)\n        if (name === \"articleTitle\") setArticleTitle(value)\n    }\n\n    const openClickHandler = () => {\n        setOpen(true)\n    }\n\n    const closeClickHandler = () => {\n        setOpen(false)\n    }\n\n    const submitHandler = (event: any) => {\n        event.preventDefault()\n        const note = {text, articleTitle, userId: 25}\n        fetch('/api/notes', {\n            method: \"POST\",\n            headers: {\"Content-type\": \"application/json\"},\n            body: JSON.stringify(note)\n        })\n        .then(r => r.json())\n        .then(data => console.log('success'\n        , data))\n    }\n\n    return (\n        <>\n        <Button variant=\"outlined\" color=\"primary\" onClick={openClickHandler}>Add Note</Button>\n        <Dialog open={open} onClose={closeClickHandler} aria-labelledby=\"form-dialog-title\">\n            <form onSubmit={submitHandler}>\n            <DialogTitle>Add a Note</DialogTitle>\n                <DialogContent>\n                    <Typography>Article Name</Typography>\n                    <FormInput type=\"text\" onChangeHandler={changeHandler} name=\"articleTitle\" />\n                    <Typography>Text</Typography>\n                    <FormInput type=\"text\" onChangeHandler={changeHandler} name=\"text\" />\n                </DialogContent>\n                <DialogActions>\n                    <Button type=\"submit\" color=\"primary\" variant=\"outlined\" onClick={closeClickHandler}>Submit</Button>\n                </DialogActions>\n            </form>\n        </Dialog>\n\n        </>\n    )\n}\n\nexport default CreateNoteForm;","/Users/joeyp/Development/code/newsfeed-app/client/src/components/FormInput.tsx",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":2,"column":17,"nodeType":"72","messageId":"73","endLine":2,"endColumn":26},{"ruleId":"70","severity":1,"message":"74","line":1,"column":10,"nodeType":"72","messageId":"73","endLine":1,"endColumn":16},{"ruleId":"75","severity":1,"message":"76","line":7,"column":70,"nodeType":"77","messageId":"78","endLine":7,"endColumn":71},{"ruleId":"70","severity":1,"message":"79","line":21,"column":11,"nodeType":"72","messageId":"73","endLine":21,"endColumn":22},{"ruleId":"70","severity":1,"message":"80","line":2,"column":10,"nodeType":"72","messageId":"73","endLine":2,"endColumn":14},{"ruleId":"70","severity":1,"message":"81","line":1,"column":17,"nodeType":"72","messageId":"73","endLine":1,"endColumn":28},{"ruleId":"70","severity":1,"message":"82","line":1,"column":30,"nodeType":"72","messageId":"73","endLine":1,"endColumn":38},{"ruleId":"70","severity":1,"message":"83","line":1,"column":69,"nodeType":"72","messageId":"73","endLine":1,"endColumn":85},{"ruleId":"70","severity":1,"message":"84","line":1,"column":87,"nodeType":"72","messageId":"73","endLine":1,"endColumn":97},{"ruleId":"70","severity":1,"message":"85","line":1,"column":99,"nodeType":"72","messageId":"73","endLine":1,"endColumn":108},{"ruleId":"70","severity":1,"message":"86","line":2,"column":10,"nodeType":"72","messageId":"73","endLine":2,"endColumn":15},{"ruleId":"70","severity":1,"message":"81","line":3,"column":16,"nodeType":"72","messageId":"73","endLine":3,"endColumn":27},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'toggleModal' is assigned a value but never used.","'Note' is defined but never used.","'ChangeEvent' is defined but never used.","'useState' is defined but never used.","'FormControlLabel' is defined but never used.","'makeStyles' is defined but never used.","'TextField' is defined but never used.","'Label' is defined but never used.","no-global-assign","no-unsafe-negation"]