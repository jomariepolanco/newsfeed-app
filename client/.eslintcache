[{"/Users/joeyp/Development/code/newsfeed-app/client/src/index.tsx":"1","/Users/joeyp/Development/code/newsfeed-app/client/src/App.tsx":"2","/Users/joeyp/Development/code/newsfeed-app/client/src/containers/NewsContainer.tsx":"3","/Users/joeyp/Development/code/newsfeed-app/client/src/containers/NotesContainer.tsx":"4","/Users/joeyp/Development/code/newsfeed-app/client/src/components/NewsCard.tsx":"5","/Users/joeyp/Development/code/newsfeed-app/client/src/components/NoteCard.tsx":"6","/Users/joeyp/Development/code/newsfeed-app/client/src/components/Navbar.tsx":"7","/Users/joeyp/Development/code/newsfeed-app/client/src/components/CheckBoxes.tsx":"8","/Users/joeyp/Development/code/newsfeed-app/client/src/containers/SearchForm.tsx":"9","/Users/joeyp/Development/code/newsfeed-app/client/src/components/CreateNoteForm.tsx":"10","/Users/joeyp/Development/code/newsfeed-app/client/src/components/FormInput.tsx":"11","/Users/joeyp/Development/code/newsfeed-app/client/src/components/Signup.tsx":"12","/Users/joeyp/Development/code/newsfeed-app/client/src/components/LoginForm.tsx":"13"},{"size":290,"mtime":1610481625960,"results":"14","hashOfConfig":"15"},{"size":2635,"mtime":1610483541605,"results":"16","hashOfConfig":"15"},{"size":1144,"mtime":1610483738805,"results":"17","hashOfConfig":"15"},{"size":771,"mtime":1610483267540,"results":"18","hashOfConfig":"15"},{"size":1027,"mtime":1610478574596,"results":"19","hashOfConfig":"15"},{"size":499,"mtime":1610483495180,"results":"20","hashOfConfig":"15"},{"size":982,"mtime":1610417774291,"results":"21","hashOfConfig":"15"},{"size":472,"mtime":1610478338648,"results":"22","hashOfConfig":"15"},{"size":1383,"mtime":1610478338649,"results":"23","hashOfConfig":"15"},{"size":2099,"mtime":1610469053899,"results":"24","hashOfConfig":"15"},{"size":663,"mtime":1610469053900,"results":"25","hashOfConfig":"15"},{"size":733,"mtime":1610480570513,"results":"26","hashOfConfig":"15"},{"size":748,"mtime":1610480570513,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"f863mb",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"30"},"/Users/joeyp/Development/code/newsfeed-app/client/src/index.tsx",[],["61","62"],"/Users/joeyp/Development/code/newsfeed-app/client/src/App.tsx",["63"],"/Users/joeyp/Development/code/newsfeed-app/client/src/containers/NewsContainer.tsx",["64"],"/Users/joeyp/Development/code/newsfeed-app/client/src/containers/NotesContainer.tsx",["65"],"import { Button, Grid } from '@material-ui/core';\nimport React, {useEffect, useState} from 'react'\nimport CreateNoteForm from '../components/CreateNoteForm';\nimport NoteCard from '../components/NoteCard'\n\nexport default function NotesContainer() {\n    const [notes, setNotes] = useState([]);\n\n    const getNotes = () => {\n      fetch('/api/notes')\n        .then((result) => result.json())\n        .then((res) => setNotes(res));\n    };\n\n    useEffect(() => {\n        getNotes()\n    }, [])\n\n    const renderNoteCards = () => {\n        return [...notes].map(note => <Grid item xs={4} spacing={2}><NoteCard note={note} /></Grid>)\n    }\n  \n    console.log(notes)\n    return (\n        <div>\n            {renderNoteCards()}\n            <CreateNoteForm />\n        </div>\n    )\n}\n","/Users/joeyp/Development/code/newsfeed-app/client/src/components/NewsCard.tsx",["66"],"import { createStyles, GridListTileBar, IconButton, makeStyles } from '@material-ui/core'\nimport NotificationsNoneOutlinedIcon from '@material-ui/icons/NotificationsNoneOutlined';\nimport React from 'react'\n\nconst useStyles = makeStyles(() => createStyles({\n    titleBar: {\n        background: 'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%,' + 'rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%'\n    },\n    icon: {\n        color: 'white',\n    }\n    })\n)\n\ninterface Props {\n    news: any;\n}\n\nconst NewsCard: React.FC<Props> = ({news}) => {\n\n    const classes = useStyles()\n    return (\n        <div>\n            <a href={news.url} target=\"_onblank\">\n                <img src={news.urlToImage} alt={news.title} />\n            </a> \n                <GridListTileBar title={news.title} titlePosition=\"top\" actionIcon={<IconButton aria-label={`start ${news.title}`} className={classes.icon}><NotificationsNoneOutlinedIcon/></IconButton>} actionPosition=\"left\" className={classes.titleBar} />\n\n        </div>\n    )\n}\n\nexport default NewsCard;\n","/Users/joeyp/Development/code/newsfeed-app/client/src/components/NoteCard.tsx",["67","68"],"import { Card, Paper } from '@material-ui/core';\nimport { Note } from '@material-ui/icons';\nimport React from 'react'\n\n\ninterface Props {\n    note: {id: number, articleTitle: string, text: string, user: {id: number, name: string}};\n}\n\nconst NoteCard: React.FC<Props> = ({note}) => {\n    return (\n        <Card raised variant=\"outlined\">\n            <h3>{note.articleTitle}</h3>\n            <p>{note.text}</p>\n            <h5>- {note.user.name}</h5>\n        </Card>\n    )\n}\n\nexport default NoteCard;\n","/Users/joeyp/Development/code/newsfeed-app/client/src/components/Navbar.tsx",[],"/Users/joeyp/Development/code/newsfeed-app/client/src/components/CheckBoxes.tsx",["69","70"],"import React, { ChangeEvent, useState } from 'react'\nimport Radio from '@material-ui/core/Radio'\nimport { FormControlLabel } from '@material-ui/core'\n\ninterface Props {\n    category: string;\n}\n\n\nconst CheckBoxes: React.FC<Props> = ({category}) => {\n\n    const [selectedCategory, setSelectedCategory] = useState('all')\n\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setSelectedCategory(e.target.value)\n    }\n\n    return (\n        <>\n        <FormControlLabel value={category} control={<Radio checked={selectedCategory === category} onChange={handleChange} value={category} name={category} color=\"primary\"/>} label={category} labelPlacement=\"end\" />\n        </>\n    )\n}\n\nexport default CheckBoxes;","/Users/joeyp/Development/code/newsfeed-app/client/src/containers/SearchForm.tsx",[],"/Users/joeyp/Development/code/newsfeed-app/client/src/components/CreateNoteForm.tsx",["71","72","73","74","75"],"import { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControlLabel, makeStyles, TextField, Typography } from '@material-ui/core';\nimport { Label } from '@material-ui/icons';\nimport React, {ChangeEvent, useState} from 'react'\nimport FormInput from './FormInput';\n\nconst CreateNoteForm = () => {\n\n    const [open, setOpen] = useState(false)\n    const [text, setText] = useState('')\n    const [articleTitle, setArticleTitle] = useState('')\n\n    const changeHandler = (value: string, name: string) => {\n        if (name === \"text\") setText(value)\n        if (name === \"articleTitle\") setArticleTitle(value)\n    }\n\n    const openClickHandler = () => {\n        setOpen(true)\n    }\n\n    const closeClickHandler = () => {\n        setOpen(false)\n    }\n\n    const submitHandler = (event: any) => {\n        event.preventDefault()\n        const note = {text, articleTitle, userId: 25}\n        fetch('/api/notes', {\n            method: \"POST\",\n            headers: {\"Content-type\": \"application/json\"},\n            body: JSON.stringify(note)\n        })\n        .then(r => r.json())\n        .then(data => console.log('success'\n        , data))\n    }\n\n    return (\n        <>\n        <Button variant=\"outlined\" color=\"primary\" onClick={openClickHandler}>Add Note</Button>\n        <Dialog open={open} onClose={closeClickHandler} aria-labelledby=\"form-dialog-title\">\n            <form onSubmit={submitHandler}>\n            <DialogTitle>Add a Note</DialogTitle>\n                <DialogContent>\n                    <Typography>Article Name</Typography>\n                    <FormInput type=\"text\" onChangeHandler={changeHandler} name=\"articleTitle\" />\n                    <Typography>Text</Typography>\n                    <FormInput type=\"text\" onChangeHandler={changeHandler} name=\"text\" />\n                </DialogContent>\n                <DialogActions>\n                    <Button type=\"submit\" color=\"primary\" variant=\"outlined\" onClick={closeClickHandler}>Submit</Button>\n                </DialogActions>\n            </form>\n        </Dialog>\n\n        </>\n    )\n}\n\nexport default CreateNoteForm;","/Users/joeyp/Development/code/newsfeed-app/client/src/components/FormInput.tsx",[],"/Users/joeyp/Development/code/newsfeed-app/client/src/components/Signup.tsx",[],"/Users/joeyp/Development/code/newsfeed-app/client/src/components/LoginForm.tsx",["76"],"import { Button, Typography } from '@material-ui/core';\nimport React, { ChangeEvent } from 'react'\nimport FormInput from './FormInput'\n\ninterface Props {\n    handleLogin: (name: string) => void;\n}\nconst LoginForm: React.FC<Props> = ({handleLogin}) =>{\n\n    const submitHandler = (e: any) => {\n        e.preventDefault()\n        handleLogin(e.target.name.value)\n    }\n\n    return (\n        <div>\n            <form onSubmit={submitHandler}>\n                <Typography>Name</Typography>\n                <FormInput type=\"text\" name=\"name\" onChangeHandler={null} />\n                <br /><br />\n                <Button variant=\"outlined\" color=\"primary\" type=\"submit\">Login</Button>\n            </form>\n        </div>\n    )\n}\n\nexport default LoginForm;",{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":28,"column":10,"nodeType":"83","messageId":"84","endLine":28,"endColumn":14},{"ruleId":"81","severity":1,"message":"85","line":2,"column":17,"nodeType":"83","messageId":"84","endLine":2,"endColumn":26},{"ruleId":"81","severity":1,"message":"86","line":1,"column":10,"nodeType":"83","messageId":"84","endLine":1,"endColumn":16},{"ruleId":"87","severity":1,"message":"88","line":7,"column":70,"nodeType":"89","messageId":"90","endLine":7,"endColumn":71},{"ruleId":"81","severity":1,"message":"91","line":1,"column":16,"nodeType":"83","messageId":"84","endLine":1,"endColumn":21},{"ruleId":"81","severity":1,"message":"92","line":2,"column":10,"nodeType":"83","messageId":"84","endLine":2,"endColumn":14},{"ruleId":"81","severity":1,"message":"93","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":28},{"ruleId":"81","severity":1,"message":"94","line":1,"column":30,"nodeType":"83","messageId":"84","endLine":1,"endColumn":38},{"ruleId":"81","severity":1,"message":"95","line":1,"column":69,"nodeType":"83","messageId":"84","endLine":1,"endColumn":85},{"ruleId":"81","severity":1,"message":"96","line":1,"column":87,"nodeType":"83","messageId":"84","endLine":1,"endColumn":97},{"ruleId":"81","severity":1,"message":"97","line":1,"column":99,"nodeType":"83","messageId":"84","endLine":1,"endColumn":108},{"ruleId":"81","severity":1,"message":"98","line":2,"column":10,"nodeType":"83","messageId":"84","endLine":2,"endColumn":15},{"ruleId":"81","severity":1,"message":"93","line":3,"column":16,"nodeType":"83","messageId":"84","endLine":3,"endColumn":27},{"ruleId":"81","severity":1,"message":"93","line":2,"column":17,"nodeType":"83","messageId":"84","endLine":2,"endColumn":28},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"@typescript-eslint/no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Button' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'Paper' is defined but never used.","'Note' is defined but never used.","'ChangeEvent' is defined but never used.","'useState' is defined but never used.","'FormControlLabel' is defined but never used.","'makeStyles' is defined but never used.","'TextField' is defined but never used.","'Label' is defined but never used.","no-global-assign","no-unsafe-negation"]