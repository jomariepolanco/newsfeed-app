[{"/Users/joeyp/Development/code/newsfeed-app/client/src/index.tsx":"1","/Users/joeyp/Development/code/newsfeed-app/client/src/App.tsx":"2","/Users/joeyp/Development/code/newsfeed-app/client/src/containers/NewsContainer.tsx":"3","/Users/joeyp/Development/code/newsfeed-app/client/src/containers/NotesContainer.tsx":"4","/Users/joeyp/Development/code/newsfeed-app/client/src/components/NewsCard.tsx":"5","/Users/joeyp/Development/code/newsfeed-app/client/src/components/NoteCard.tsx":"6","/Users/joeyp/Development/code/newsfeed-app/client/src/components/Navbar.tsx":"7","/Users/joeyp/Development/code/newsfeed-app/client/src/components/CheckBoxes.tsx":"8","/Users/joeyp/Development/code/newsfeed-app/client/src/components/CreateNoteForm.tsx":"9","/Users/joeyp/Development/code/newsfeed-app/client/src/components/FormInput.tsx":"10","/Users/joeyp/Development/code/newsfeed-app/client/src/components/Signup.tsx":"11","/Users/joeyp/Development/code/newsfeed-app/client/src/components/LoginForm.tsx":"12","/Users/joeyp/Development/code/newsfeed-app/client/src/components/SearchForm.tsx":"13"},{"size":290,"mtime":1610489094446,"results":"14","hashOfConfig":"15"},{"size":3112,"mtime":1610501385056,"results":"16","hashOfConfig":"15"},{"size":1143,"mtime":1610491175416,"results":"17","hashOfConfig":"15"},{"size":1738,"mtime":1610501126753,"results":"18","hashOfConfig":"15"},{"size":980,"mtime":1610499611536,"results":"19","hashOfConfig":"15"},{"size":1372,"mtime":1610501215805,"results":"20","hashOfConfig":"15"},{"size":1381,"mtime":1610497040447,"results":"21","hashOfConfig":"15"},{"size":507,"mtime":1610493333626,"results":"22","hashOfConfig":"15"},{"size":2316,"mtime":1610499517364,"results":"23","hashOfConfig":"15"},{"size":679,"mtime":1610494989769,"results":"24","hashOfConfig":"15"},{"size":1077,"mtime":1610499468644,"results":"25","hashOfConfig":"15"},{"size":1055,"mtime":1610499441574,"results":"26","hashOfConfig":"15"},{"size":1472,"mtime":1610493231566,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"f863mb",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/joeyp/Development/code/newsfeed-app/client/src/index.tsx",[],["61","62"],"/Users/joeyp/Development/code/newsfeed-app/client/src/App.tsx",["63"],"/Users/joeyp/Development/code/newsfeed-app/client/src/containers/NewsContainer.tsx",["64"],"import { createStyles, GridList, GridListTile, makeStyles, Theme } from '@material-ui/core';\nimport React, { useEffect } from 'react'\nimport NewsCard from '../components/NewsCard'\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper\n    },\n    gridList: {\n        width: 900,\n        height: 750\n    },\n})\n)\ninterface Props {\n    news: any;\n}\n\nconst NewsContainer: React.FC<Props> = ({news}) => {\n\n\n    const renderNewsCards = () => {\n        return [...news].map((article, idx) => {\n            return(\n                <GridListTile key={idx}>\n                    <NewsCard key={idx} news={article}/>\n                </GridListTile>\n            )\n        })\n    }\n\n    const classes = useStyles()\n\n    return ( \n        <div className={classes.root}>\n            <GridList cellHeight={300} spacing={1} className={classes.gridList}>\n                {renderNewsCards()}\n            </GridList>\n        </div>\n    )\n}\n\nexport default NewsContainer;","/Users/joeyp/Development/code/newsfeed-app/client/src/containers/NotesContainer.tsx",["65"],"import { Button, Grid } from '@material-ui/core';\nimport React, {useEffect, useState} from 'react'\nimport CreateNoteForm from '../components/CreateNoteForm';\nimport NoteCard from '../components/NoteCard'\n\ninterface Props {\n    user: {id: number, name: string};\n}\n\nconst NotesContainer: React.FC<Props> = ({user}) => {\n    const [notes, setNotes] = useState([]);\n\n    const getNotes = () => {\n      fetch('/api/notes')\n        .then((result) => result.json())\n        .then((res) => setNotes(res));\n    };\n\n    useEffect(() => {\n        getNotes()\n    }, [])\n\n    const renderNoteCards = () => {\n        return [...notes].map(note => <Grid item xs={4}><NoteCard deleteNoteHandler={deleteNoteHandler} user={user} note={note} /></Grid>)\n    }\n  \n    const createNoteHandler = (note: {text: string, userId: number, articleTitle: string}) => {\n        if (user.id !== 0) {\n            fetch('/api/notes', {\n                method: \"POST\",\n                headers: {\"Content-type\": \"application/json\"},\n                body: JSON.stringify(note)\n            })\n            .then(r => r.json())\n            .then(data => getNotes())\n        } else {\n            alert('Log in to write a note!')\n        }\n    }\n\n    const deleteNoteHandler = (id: number) => {\n        fetch(`/api/notes/${id}`, {\n            method: \"DELETE\",\n            headers: {'Content-Type': 'application/json'}\n        })\n        getNotes()\n    }\n\n    return (\n        <div>\n            <h3>Notes from fellow users!</h3>\n            <Grid container spacing={3}>\n                {renderNoteCards()}\n            </Grid>\n            <br />\n            <CreateNoteForm createNoteHandler={createNoteHandler} user={user} />\n        </div>\n    )\n}\n\nexport default NotesContainer;","/Users/joeyp/Development/code/newsfeed-app/client/src/components/NewsCard.tsx",[],"/Users/joeyp/Development/code/newsfeed-app/client/src/components/NoteCard.tsx",["66","67"],"import { Button, Card, Paper } from '@material-ui/core';\nimport React from 'react'\nimport {makeStyles, Theme, createStyles} from '@material-ui/core'\nimport userEvent from '@testing-library/user-event';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary\n    }\n    })\n)\n\ninterface Props {\n    note: {id: number, articleTitle: string, text: string, user: {id: number, name: string}};\n    deleteNoteHandler: (id: number) => void;\n    user: {id: number, name: string};\n}\n\nconst NoteCard: React.FC<Props> = ({note, deleteNoteHandler, user}) => {\n    \n    \n    const deleteClickHandler = () => {\n        deleteNoteHandler(note.id)\n    }\n\n    const renderDeleteButton = () => {\n        if (note.user.id === user.id){\n            return <Button variant=\"contained\" onClick={deleteClickHandler} style={{color: '#ffffff', backgroundColor: '#9147ff', fontWeight: 'bold'}}>Delete</Button>\n        } else {\n            return null\n        }\n    }\n\n    const classes = useStyles()\n\n    return (\n        <Paper variant=\"outlined\" className={classes.paper}>\n            <h3>{note.articleTitle}</h3>\n            <p>{note.text}</p>\n            <h5>- {note.user.name}</h5>\n            {renderDeleteButton()}\n        </Paper>\n    )\n}\n\nexport default NoteCard;\n","/Users/joeyp/Development/code/newsfeed-app/client/src/components/Navbar.tsx",[],"/Users/joeyp/Development/code/newsfeed-app/client/src/components/CheckBoxes.tsx",["68","69"],"import React, { ChangeEvent, useState } from 'react'\nimport Radio from '@material-ui/core/Radio'\nimport { FormControlLabel } from '@material-ui/core'\n\ninterface Props {\n    category: string;\n    setCategory: (value: string) => void;\n}\n\n\nconst CheckBoxes: React.FC<Props> = ({category, setCategory}) => {\n\n    return (\n        <FormControlLabel style={{color: 'grey'}} value={category} control={<Radio style={{color: '#9147ff'}}/>} label={category} labelPlacement=\"end\" />\n    )\n}\n\nexport default CheckBoxes;","/Users/joeyp/Development/code/newsfeed-app/client/src/components/CreateNoteForm.tsx",["70","71","72","73","74"],"import { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControlLabel, makeStyles, TextField, Typography } from '@material-ui/core';\nimport { Label } from '@material-ui/icons';\nimport React, {ChangeEvent, useState} from 'react'\nimport FormInput from './FormInput';\nimport Alert from '@material-ui/lab/Alert'\n\ninterface Props {\n    user: {id: number, name: string};\n    createNoteHandler: (note: {text: string, userId: number, articleTitle: string}) => void;\n}\n\nconst CreateNoteForm: React.FC<Props> = ({user, createNoteHandler}) => {\n\n    const [open, setOpen] = useState(false)\n    const [text, setText] = useState('')\n    const [articleTitle, setArticleTitle] = useState('')\n\n    const changeHandler = (event: ChangeEvent<HTMLInputElement>) => {\n        if (event.target.name === \"text\") setText(event.target.value)\n        if (event.target.name === \"articleTitle\") setArticleTitle(event.target.value)\n    }\n\n    const openClickHandler = () => {\n        setOpen(true)\n    }\n\n    const closeClickHandler = () => {\n        setOpen(false)\n    }\n\n    const submitHandler = (event: any) => {\n        event.preventDefault()\n        const note = {text, articleTitle, userId: user.id}\n        createNoteHandler(note)\n    }\n\n    return (\n        <>\n        <Button variant=\"contained\" style={{backgroundColor: '#9147ff', color: '#ffffff', fontWeight: 'bold'}} onClick={openClickHandler}>Add Note</Button>\n        <Dialog open={open} onClose={closeClickHandler} aria-labelledby=\"form-dialog-title\">\n            <form onSubmit={submitHandler}>\n            <DialogTitle>Add a Note</DialogTitle>\n                <DialogContent>\n                    <Typography>Article Name</Typography>\n                    <FormInput value={articleTitle} type=\"text\" onChangeHandler={changeHandler} name=\"articleTitle\" />\n                    <Typography>Text</Typography>\n                    <FormInput type=\"textarea\" onChangeHandler={changeHandler} name=\"text\" value={text} />\n                </DialogContent>\n                <DialogActions>\n                    <Button type=\"submit\" style={{backgroundColor: '#9147ff', color: '#ffffff'}}  variant=\"contained\" onClick={closeClickHandler}>Submit</Button>\n                </DialogActions>\n            </form>\n        </Dialog>\n\n        </>\n    )\n}\n\nexport default CreateNoteForm;","/Users/joeyp/Development/code/newsfeed-app/client/src/components/FormInput.tsx",[],"/Users/joeyp/Development/code/newsfeed-app/client/src/components/Signup.tsx",[],"/Users/joeyp/Development/code/newsfeed-app/client/src/components/LoginForm.tsx",["75"],"import { Box, Button, Container, Typography } from '@material-ui/core';\nimport React, { ChangeEvent, useState } from 'react'\nimport FormInput from './FormInput'\n\ninterface Props {\n    handleLogin: (name: string) => void;\n}\nconst LoginForm: React.FC<Props> = ({handleLogin}) =>{\n\n    const [name, setName] = useState('')\n\n    const submitHandler = (e: any) => {\n        e.preventDefault()\n        handleLogin(name)\n    }\n\n    const onNameChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        setName(e.target.value)\n    }\n\n    return (\n        <Container fixed>\n            <h1>Login</h1>\n        <div>\n            <form onSubmit={submitHandler}>\n                <Typography>Name</Typography>\n                <FormInput value={name} type=\"text\" name=\"name\" onChangeHandler={onNameChangeHandler} />\n                <br /><br />\n                <Button variant=\"contained\" style={{backgroundColor: '#9147ff', color: '#ffffff'}} type=\"submit\">Login</Button>\n            </form>\n        </div>\n\n        </Container>\n    )\n}\n\nexport default LoginForm;","/Users/joeyp/Development/code/newsfeed-app/client/src/components/SearchForm.tsx",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":10,"column":58,"nodeType":"82","messageId":"83","endLine":10,"endColumn":66},{"ruleId":"80","severity":1,"message":"84","line":2,"column":17,"nodeType":"82","messageId":"83","endLine":2,"endColumn":26},{"ruleId":"80","severity":1,"message":"85","line":1,"column":10,"nodeType":"82","messageId":"83","endLine":1,"endColumn":16},{"ruleId":"80","severity":1,"message":"86","line":1,"column":18,"nodeType":"82","messageId":"83","endLine":1,"endColumn":22},{"ruleId":"80","severity":1,"message":"87","line":4,"column":8,"nodeType":"82","messageId":"83","endLine":4,"endColumn":17},{"ruleId":"80","severity":1,"message":"88","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":28},{"ruleId":"80","severity":1,"message":"89","line":1,"column":30,"nodeType":"82","messageId":"83","endLine":1,"endColumn":38},{"ruleId":"80","severity":1,"message":"90","line":1,"column":69,"nodeType":"82","messageId":"83","endLine":1,"endColumn":85},{"ruleId":"80","severity":1,"message":"91","line":1,"column":87,"nodeType":"82","messageId":"83","endLine":1,"endColumn":97},{"ruleId":"80","severity":1,"message":"92","line":1,"column":99,"nodeType":"82","messageId":"83","endLine":1,"endColumn":108},{"ruleId":"80","severity":1,"message":"93","line":2,"column":10,"nodeType":"82","messageId":"83","endLine":2,"endColumn":15},{"ruleId":"80","severity":1,"message":"94","line":5,"column":8,"nodeType":"82","messageId":"83","endLine":5,"endColumn":13},{"ruleId":"80","severity":1,"message":"95","line":1,"column":10,"nodeType":"82","messageId":"83","endLine":1,"endColumn":13},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'userEvent' is defined but never used.","'ChangeEvent' is defined but never used.","'useState' is defined but never used.","'FormControlLabel' is defined but never used.","'makeStyles' is defined but never used.","'TextField' is defined but never used.","'Label' is defined but never used.","'Alert' is defined but never used.","'Box' is defined but never used.","no-global-assign","no-unsafe-negation"]